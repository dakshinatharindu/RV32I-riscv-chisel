circuit ALU :
  module ALU :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip ALUCtrl : UInt<4>, flip A : SInt<32>, flip B : SInt<32>, ALUOut : SInt<32>, eq : UInt<1>, ge : UInt<1>, geu : UInt<1>}

    node shamt = bits(io.B, 4, 0) @[ALU.scala 21:16]
    wire res : SInt<32> @[ALU.scala 23:24]
    res <= asSInt(UInt<32>("h0")) @[ALU.scala 23:24]
    wire eq : UInt<1> @[ALU.scala 24:23]
    eq <= UInt<1>("h0") @[ALU.scala 24:23]
    wire ge : UInt<1> @[ALU.scala 25:23]
    ge <= UInt<1>("h0") @[ALU.scala 25:23]
    wire geu : UInt<1> @[ALU.scala 26:24]
    geu <= UInt<1>("h0") @[ALU.scala 26:24]
    node _eq_T = eq(io.A, io.B) @[ALU.scala 28:15]
    node _eq_T_1 = mux(_eq_T, UInt<1>("h1"), UInt<1>("h0")) @[ALU.scala 28:12]
    eq <= _eq_T_1 @[ALU.scala 28:6]
    node _ge_T = gt(io.A, io.B) @[ALU.scala 29:15]
    node _ge_T_1 = mux(_ge_T, UInt<1>("h1"), UInt<1>("h0")) @[ALU.scala 29:12]
    ge <= _ge_T_1 @[ALU.scala 29:6]
    node _geu_T = asUInt(io.A) @[ALU.scala 30:16]
    node _geu_T_1 = asUInt(io.B) @[ALU.scala 30:27]
    node _geu_T_2 = gt(_geu_T, _geu_T_1) @[ALU.scala 30:23]
    node _geu_T_3 = mux(_geu_T_2, UInt<1>("h1"), UInt<1>("h0")) @[ALU.scala 30:13]
    geu <= _geu_T_3 @[ALU.scala 30:7]
    node _T = eq(UInt<1>("h0"), io.ALUCtrl) @[ALU.scala 32:22]
    when _T : @[ALU.scala 32:22]
      node _res_T = and(io.A, io.B) @[ALU.scala 33:26]
      node _res_T_1 = asSInt(_res_T) @[ALU.scala 33:26]
      res <= _res_T_1 @[ALU.scala 33:21]
    else :
      node _T_1 = eq(UInt<1>("h1"), io.ALUCtrl) @[ALU.scala 32:22]
      when _T_1 : @[ALU.scala 32:22]
        node _res_T_2 = or(io.A, io.B) @[ALU.scala 34:25]
        node _res_T_3 = asSInt(_res_T_2) @[ALU.scala 34:25]
        res <= _res_T_3 @[ALU.scala 34:20]
      else :
        node _T_2 = eq(UInt<2>("h2"), io.ALUCtrl) @[ALU.scala 32:22]
        when _T_2 : @[ALU.scala 32:22]
          node _res_T_4 = xor(io.A, io.B) @[ALU.scala 35:26]
          node _res_T_5 = asSInt(_res_T_4) @[ALU.scala 35:26]
          res <= _res_T_5 @[ALU.scala 35:21]
        else :
          node _T_3 = eq(UInt<2>("h3"), io.ALUCtrl) @[ALU.scala 32:22]
          when _T_3 : @[ALU.scala 32:22]
            node _res_T_6 = add(io.A, io.B) @[ALU.scala 36:26]
            node _res_T_7 = tail(_res_T_6, 1) @[ALU.scala 36:26]
            node _res_T_8 = asSInt(_res_T_7) @[ALU.scala 36:26]
            res <= _res_T_8 @[ALU.scala 36:21]
          else :
            node _T_4 = eq(UInt<3>("h4"), io.ALUCtrl) @[ALU.scala 32:22]
            when _T_4 : @[ALU.scala 32:22]
              node _res_T_9 = sub(io.A, io.B) @[ALU.scala 37:26]
              node _res_T_10 = tail(_res_T_9, 1) @[ALU.scala 37:26]
              node _res_T_11 = asSInt(_res_T_10) @[ALU.scala 37:26]
              res <= _res_T_11 @[ALU.scala 37:21]
            else :
              node _T_5 = eq(UInt<3>("h5"), io.ALUCtrl) @[ALU.scala 32:22]
              when _T_5 : @[ALU.scala 32:22]
                node _res_T_12 = lt(io.A, io.B) @[ALU.scala 38:27]
                node _res_T_13 = asSInt(_res_T_12) @[ALU.scala 38:32]
                res <= _res_T_13 @[ALU.scala 38:21]
              else :
                node _T_6 = eq(UInt<3>("h6"), io.ALUCtrl) @[ALU.scala 32:22]
                when _T_6 : @[ALU.scala 32:22]
                  node _res_T_14 = dshl(io.A, shamt) @[ALU.scala 39:27]
                  res <= _res_T_14 @[ALU.scala 39:21]
                else :
                  node _T_7 = eq(UInt<3>("h7"), io.ALUCtrl) @[ALU.scala 32:22]
                  when _T_7 : @[ALU.scala 32:22]
                    node _res_T_15 = asUInt(io.A) @[ALU.scala 40:28]
                    node _res_T_16 = asUInt(io.B) @[ALU.scala 40:39]
                    node _res_T_17 = lt(_res_T_15, _res_T_16) @[ALU.scala 40:35]
                    node _res_T_18 = asSInt(_res_T_17) @[ALU.scala 40:47]
                    res <= _res_T_18 @[ALU.scala 40:22]
                  else :
                    node _T_8 = eq(UInt<4>("h8"), io.ALUCtrl) @[ALU.scala 32:22]
                    when _T_8 : @[ALU.scala 32:22]
                      node _res_T_19 = asUInt(io.A) @[ALU.scala 41:27]
                      node _res_T_20 = dshr(_res_T_19, shamt) @[ALU.scala 41:34]
                      node _res_T_21 = asSInt(_res_T_20) @[ALU.scala 41:44]
                      res <= _res_T_21 @[ALU.scala 41:21]
                    else :
                      node _T_9 = eq(UInt<4>("h9"), io.ALUCtrl) @[ALU.scala 32:22]
                      when _T_9 : @[ALU.scala 32:22]
                        node _res_T_22 = dshr(io.A, shamt) @[ALU.scala 42:26]
                        res <= _res_T_22 @[ALU.scala 42:21]
    io.ALUOut <= res @[ALU.scala 45:13]
    io.eq <= eq @[ALU.scala 46:9]
    io.ge <= ge @[ALU.scala 47:9]
    io.geu <= geu @[ALU.scala 48:10]

